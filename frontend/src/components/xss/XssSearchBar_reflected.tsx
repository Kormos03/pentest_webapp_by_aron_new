
import { useLocation } from 'react-router-dom';
export function XssSeachBar() {
  const location = useLocation();

  // Get the query string from the URL
  const query = new URLSearchParams(location.search).get('q');

  // Function to create dangerouslySetInnerHTML object
  const createMarkup = (input:any) => {
    return { __html: input };
  };

  return (
    <div className='interactive-container'>
        <h2>Reflected XSS interactive</h2>
        <img src="/reflected_xss.png" alt="" />
        <p className='note'>
            Try to search in the url like, http://localhost:5173/xss?q= this is the base, like this we can "search" with query. After the '=' we can insert some javascript code into, then wait for the result. Try using the <a href="/cheatsheet">CheatSheet</a></p> 
      <h2>Search Results</h2>
      <p>Search Query: {query}</p>
      <div>
        {/* This dangerouslySetInnerHTML is what makes the page vulnerable */}
        <div id='formContainer' dangerouslySetInnerHTML={createMarkup(query)} />
      </div>
    </div>
  );
};

export default XssSeachBar;

{/*
  <img src="not_available" onerror="(function createForm(){const form = document.createElement('form'); const inputField = document.createElement('input'); inputField.type = 'text'; inputField.id = 'simpleInput'; inputField.name = 'simpleInput'; inputField.placeholder = 'Enter something...'; form.appendChild(inputField); const submitButton = document.createElement('button'); submitButton.type = 'submit'; submitButton.textContent = 'Submit'; form.appendChild(submitButton); document.getElementById('formContainer').appendChild(form);})()">
*/}