import { Injectable, NotFoundException } from '@nestjs/common';
import { CreatePostDto } from './dto/create-post.dto';
import { UpdatePostDto } from './dto/update-post.dto';
import { PrismaService } from 'src/prisma.service';
import { title } from 'process';

@Injectable()
export class PostsService {
  constructor( private readonly db : PrismaService) {}
  
  create(createPostDto: CreatePostDto) {
    return this.db.post.create({
      data: {
        title: createPostDto.title,
        content: createPostDto.content,
        authorId: createPostDto.authorId
      }
    })
  }

  findAll() {
    return this.db.post.findMany();
  }

  findOne(id: number) {
    return this.db.post.findUnique({
      where: { id },
    });
  }

  update(id: number, updatePostDto: UpdatePostDto) {
    return this.db.post.update({
      where: { id },
      data: updatePostDto,
    });
  }
  async remove(id: number) {
    const post = await this.db.post.findUnique({
      where: { id },
    });

    if (!post) {
      throw new NotFoundException(`Post with ID ${id} not found`);
    }

    return this.db.post.delete({
      where: { id },
    });
  }
}
